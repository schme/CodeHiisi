use serde::Deserialize;
use super::{PlatformKey, PlatformMouseButton};

/// Input keys.
#[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Deserialize)]
pub enum Key {
    Space,
    Apostrophe,
    Comma,
    Minus,
    Period,
    Slash,
    Num0,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,
    Semicolon,
    Equal,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    LeftBracket,
    Backslash,
    RightBracket,
    GraveAccent,
    World1,
    World2,

    Escape,
    Enter,
    Tab,
    Backspace,
    Insert,
    Delete,
    Right,
    Left,
    Down,
    Up,
    PageUp,
    PageDown,
    Home,
    End,
    CapsLock,
    ScrollLock,
    NumLock,
    PrintScreen,
    Pause,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    F25,
    Kp0,
    Kp1,
    Kp2,
    Kp3,
    Kp4,
    Kp5,
    Kp6,
    Kp7,
    Kp8,
    Kp9,
    KpDecimal,
    KpDivide,
    KpMultiply,
    KpSubtract,
    KpAdd,
    KpEnter,
    KpEqual,
    LeftShift,
    LeftControl,
    LeftAlt,
    LeftSuper,
    RightShift,
    RightControl,
    RightAlt,
    RightSuper,
    Menu,
    Unknown,
}

impl Key {
    #[inline]
    pub fn from_platform_key(pk: PlatformKey) -> Key {
        match pk {
            PlatformKey::Space => Key::Space,
            PlatformKey::Apostrophe => Key::Apostrophe,
            PlatformKey::Comma => Key::Comma,
            PlatformKey::Minus => Key::Minus,
            PlatformKey::Period => Key::Period,
            PlatformKey::Slash => Key::Slash,
            PlatformKey::Num0 => Key::Num0,
            PlatformKey::Num1 => Key::Num1,
            PlatformKey::Num2 => Key::Num2,
            PlatformKey::Num3 => Key::Num3,
            PlatformKey::Num4 => Key::Num4,
            PlatformKey::Num5 => Key::Num5,
            PlatformKey::Num6 => Key::Num6,
            PlatformKey::Num7 => Key::Num7,
            PlatformKey::Num8 => Key::Num8,
            PlatformKey::Num9 => Key::Num9,
            PlatformKey::Semicolon => Key::Semicolon,
            PlatformKey::Equal => Key::Equal,
            PlatformKey::A => Key::A,
            PlatformKey::B => Key::B,
            PlatformKey::C => Key::C,
            PlatformKey::D => Key::D,
            PlatformKey::E => Key::E,
            PlatformKey::F => Key::F,
            PlatformKey::G => Key::G,
            PlatformKey::H => Key::H,
            PlatformKey::I => Key::I,
            PlatformKey::J => Key::J,
            PlatformKey::K => Key::K,
            PlatformKey::L => Key::L,
            PlatformKey::M => Key::M,
            PlatformKey::N => Key::N,
            PlatformKey::O => Key::O,
            PlatformKey::P => Key::P,
            PlatformKey::Q => Key::Q,
            PlatformKey::R => Key::R,
            PlatformKey::S => Key::S,
            PlatformKey::T => Key::T,
            PlatformKey::U => Key::U,
            PlatformKey::V => Key::V,
            PlatformKey::W => Key::W,
            PlatformKey::X => Key::X,
            PlatformKey::Y => Key::Y,
            PlatformKey::Z => Key::Z,
            PlatformKey::LeftBracket => Key::LeftBracket,
            PlatformKey::Backslash => Key::Backslash,
            PlatformKey::RightBracket => Key::RightBracket,
            PlatformKey::GraveAccent => Key::GraveAccent,
            PlatformKey::World1 => Key::World1,
            PlatformKey::World2 => Key::World2,

            PlatformKey::Escape => Key::Escape,
            PlatformKey::Enter => Key::Enter,
            PlatformKey::Tab => Key::Tab,
            PlatformKey::Backspace => Key::Backspace,
            PlatformKey::Insert => Key::Insert,
            PlatformKey::Delete => Key::Delete,
            PlatformKey::Right => Key::Right,
            PlatformKey::Left => Key::Left,
            PlatformKey::Down => Key::Down,
            PlatformKey::Up => Key::Up,
            PlatformKey::PageUp => Key::PageUp,
            PlatformKey::PageDown => Key::PageDown,
            PlatformKey::Home => Key::Home,
            PlatformKey::End => Key::End,
            PlatformKey::CapsLock => Key::CapsLock,
            PlatformKey::ScrollLock => Key::ScrollLock,
            PlatformKey::NumLock => Key::NumLock,
            PlatformKey::PrintScreen => Key::PrintScreen,
            PlatformKey::Pause => Key::Pause,
            PlatformKey::F1 => Key::F1,
            PlatformKey::F2 => Key::F2,
            PlatformKey::F3 => Key::F3,
            PlatformKey::F4 => Key::F4,
            PlatformKey::F5 => Key::F5,
            PlatformKey::F6 => Key::F6,
            PlatformKey::F7 => Key::F7,
            PlatformKey::F8 => Key::F8,
            PlatformKey::F9 => Key::F9,
            PlatformKey::F10 => Key::F10,
            PlatformKey::F11 => Key::F11,
            PlatformKey::F12 => Key::F12,
            PlatformKey::F13 => Key::F13,
            PlatformKey::F14 => Key::F14,
            PlatformKey::F15 => Key::F15,
            PlatformKey::F16 => Key::F16,
            PlatformKey::F17 => Key::F17,
            PlatformKey::F18 => Key::F18,
            PlatformKey::F19 => Key::F19,
            PlatformKey::F20 => Key::F20,
            PlatformKey::F21 => Key::F21,
            PlatformKey::F22 => Key::F22,
            PlatformKey::F23 => Key::F23,
            PlatformKey::F24 => Key::F24,
            PlatformKey::F25 => Key::F25,
            PlatformKey::Kp0 => Key::Kp0,
            PlatformKey::Kp1 => Key::Kp1,
            PlatformKey::Kp2 => Key::Kp2,
            PlatformKey::Kp3 => Key::Kp3,
            PlatformKey::Kp4 => Key::Kp4,
            PlatformKey::Kp5 => Key::Kp5,
            PlatformKey::Kp6 => Key::Kp6,
            PlatformKey::Kp7 => Key::Kp7,
            PlatformKey::Kp8 => Key::Kp8,
            PlatformKey::Kp9 => Key::Kp9,
            PlatformKey::KpDecimal => Key::KpDecimal,
            PlatformKey::KpDivide => Key::KpDivide,
            PlatformKey::KpMultiply => Key::KpMultiply,
            PlatformKey::KpSubtract => Key::KpSubtract,
            PlatformKey::KpAdd => Key::KpAdd,
            PlatformKey::KpEnter => Key::KpEnter,
            PlatformKey::KpEqual => Key::KpEqual,
            PlatformKey::LeftShift => Key::LeftShift,
            PlatformKey::LeftControl => Key::LeftControl,
            PlatformKey::LeftAlt => Key::LeftAlt,
            PlatformKey::LeftSuper => Key::LeftSuper,
            PlatformKey::RightShift => Key::RightShift,
            PlatformKey::RightControl => Key::RightControl,
            PlatformKey::RightAlt => Key::RightAlt,
            PlatformKey::RightSuper => Key::RightSuper,
            PlatformKey::Menu => Key::Menu,
            PlatformKey::Unknown => Key::Unknown,
        }
    }

}


/// Mouse Buttons
#[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash, Debug, Deserialize)]
pub enum MouseButton {
    Button1,
    Button2,
    Button3,
    Button4,
    Button5,
    Button6,
    Button7,
    Button8,
}

impl MouseButton {
    #[inline]
    pub fn from_platform_button(b: PlatformMouseButton) -> Self {
        match b {
            PlatformMouseButton::Button1 => MouseButton::Button1,
            PlatformMouseButton::Button2 => MouseButton::Button2,
            PlatformMouseButton::Button3 => MouseButton::Button3,
            PlatformMouseButton::Button4 => MouseButton::Button4,
            PlatformMouseButton::Button5 => MouseButton::Button5,
            PlatformMouseButton::Button6 => MouseButton::Button6,
            PlatformMouseButton::Button7 => MouseButton::Button7,
            PlatformMouseButton::Button8 => MouseButton::Button8,
        }
    }

}
